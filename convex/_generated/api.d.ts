/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.6.3.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as characters from "../characters.js";
import type * as clerk from "../clerk.js";
import type * as clocks from "../clocks.js";
import type * as diceRolls from "../diceRolls.js";
import type * as env from "../env.js";
import type * as http from "../http.js";
import type * as players from "../players.js";
import type * as preview from "../preview.js";
import type * as roles from "../roles.js";
import type * as test from "../test.js";
import type * as users from "../users.js";
import type * as validators from "../validators.js";
import type * as world from "../world.js";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  characters: typeof characters;
  clerk: typeof clerk;
  clocks: typeof clocks;
  diceRolls: typeof diceRolls;
  env: typeof env;
  http: typeof http;
  players: typeof players;
  preview: typeof preview;
  roles: typeof roles;
  test: typeof test;
  users: typeof users;
  validators: typeof validators;
  world: typeof world;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
